// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "../inst/include/RcppColMetric.h"
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// col_auc
NumericMatrix col_auc(const RObject& x, const IntegerVector& y, const Nullable<List>& args);
RcppExport SEXP _RcppColMetric_col_auc(SEXP xSEXP, SEXP ySEXP, SEXP argsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const RObject& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const IntegerVector& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const Nullable<List>& >::type args(argsSEXP);
    rcpp_result_gen = Rcpp::wrap(col_auc(x, y, args));
    return rcpp_result_gen;
END_RCPP
}
// col_auc_vec
List col_auc_vec(const List& x, const List& y, const Nullable<List>& args);
RcppExport SEXP _RcppColMetric_col_auc_vec(SEXP xSEXP, SEXP ySEXP, SEXP argsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const List& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const List& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const Nullable<List>& >::type args(argsSEXP);
    rcpp_result_gen = Rcpp::wrap(col_auc_vec(x, y, args));
    return rcpp_result_gen;
END_RCPP
}
// col_mut_info
NumericMatrix col_mut_info(const RObject& x, const IntegerVector& y, const Nullable<List>& args);
RcppExport SEXP _RcppColMetric_col_mut_info(SEXP xSEXP, SEXP ySEXP, SEXP argsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const RObject& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const IntegerVector& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const Nullable<List>& >::type args(argsSEXP);
    rcpp_result_gen = Rcpp::wrap(col_mut_info(x, y, args));
    return rcpp_result_gen;
END_RCPP
}
// col_mut_info_vec
List col_mut_info_vec(const List& x, const List& y, const Nullable<List>& args);
RcppExport SEXP _RcppColMetric_col_mut_info_vec(SEXP xSEXP, SEXP ySEXP, SEXP argsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const List& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const List& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const Nullable<List>& >::type args(argsSEXP);
    rcpp_result_gen = Rcpp::wrap(col_mut_info_vec(x, y, args));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RcppColMetric_col_auc", (DL_FUNC) &_RcppColMetric_col_auc, 3},
    {"_RcppColMetric_col_auc_vec", (DL_FUNC) &_RcppColMetric_col_auc_vec, 3},
    {"_RcppColMetric_col_mut_info", (DL_FUNC) &_RcppColMetric_col_mut_info, 3},
    {"_RcppColMetric_col_mut_info_vec", (DL_FUNC) &_RcppColMetric_col_mut_info_vec, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_RcppColMetric(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
